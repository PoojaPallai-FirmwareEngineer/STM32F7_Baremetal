
20_spi_rxtx_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006c0  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000888  08000888  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000888  08000888  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  08000888  08000888  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000888  08000888  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000888  08000888  00010888  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800088c  0800088c  0001088c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08000890  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000014  080008a4  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  080008a4  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ece  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000335  00000000  00000000  00020f12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00021248  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00021300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fa0  00000000  00000000  00021390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000d98  00000000  00000000  00022330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a0c19  00000000  00000000  000230c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c3ce1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001cc  00000000  00000000  000c3d34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000014 	.word	0x20000014
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000870 	.word	0x08000870

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000018 	.word	0x20000018
 8000204:	08000870 	.word	0x08000870

08000208 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	4603      	mov	r3, r0
 8000210:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000212:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000216:	2b00      	cmp	r3, #0
 8000218:	db0b      	blt.n	8000232 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800021a:	79fb      	ldrb	r3, [r7, #7]
 800021c:	f003 021f 	and.w	r2, r3, #31
 8000220:	4907      	ldr	r1, [pc, #28]	; (8000240 <__NVIC_EnableIRQ+0x38>)
 8000222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000226:	095b      	lsrs	r3, r3, #5
 8000228:	2001      	movs	r0, #1
 800022a:	fa00 f202 	lsl.w	r2, r0, r2
 800022e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000232:	bf00      	nop
 8000234:	370c      	adds	r7, #12
 8000236:	46bd      	mov	sp, r7
 8000238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	e000e100 	.word	0xe000e100

08000244 <enable_spi_interrupts>:
uint8_t rx_buff[sizeof(tx_buff)];
uint8_t rx_size = sizeof(tx_buff) - 1;
volatile uint8_t rx_idx = 0;

void enable_spi_interrupts(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
    // Enable TXE interrupt for SPI1 (Master)
    SPI1->CR2 |= SPI_CR2_TXEIE;
 8000248:	4b09      	ldr	r3, [pc, #36]	; (8000270 <enable_spi_interrupts+0x2c>)
 800024a:	685b      	ldr	r3, [r3, #4]
 800024c:	4a08      	ldr	r2, [pc, #32]	; (8000270 <enable_spi_interrupts+0x2c>)
 800024e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000252:	6053      	str	r3, [r2, #4]

    // Enable RXNE interrupt for SPI3 (Slave)
    SPI3->CR2 |= SPI_CR2_RXNEIE;
 8000254:	4b07      	ldr	r3, [pc, #28]	; (8000274 <enable_spi_interrupts+0x30>)
 8000256:	685b      	ldr	r3, [r3, #4]
 8000258:	4a06      	ldr	r2, [pc, #24]	; (8000274 <enable_spi_interrupts+0x30>)
 800025a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800025e:	6053      	str	r3, [r2, #4]

    // Enable NVIC IRQs
    NVIC_EnableIRQ(SPI1_IRQn);
 8000260:	2023      	movs	r0, #35	; 0x23
 8000262:	f7ff ffd1 	bl	8000208 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(SPI3_IRQn);
 8000266:	2033      	movs	r0, #51	; 0x33
 8000268:	f7ff ffce 	bl	8000208 <__NVIC_EnableIRQ>
}
 800026c:	bf00      	nop
 800026e:	bd80      	pop	{r7, pc}
 8000270:	40013000 	.word	0x40013000
 8000274:	40003c00 	.word	0x40003c00

08000278 <main>:

int main(void)
{
 8000278:	b580      	push	{r7, lr}
 800027a:	af00      	add	r7, sp, #0
    /* Configure Master and Slave */
    spi1_config();    // Master
 800027c:	f000 f8ac 	bl	80003d8 <spi1_config>
    spi3_config();    // Slave
 8000280:	f000 f99c 	bl	80005bc <spi3_config>

    spi3_activate();  // Enable slave first
 8000284:	f000 fa96 	bl	80007b4 <spi3_activate>
    spi1_activate();  // Then enable master
 8000288:	f000 fa84 	bl	8000794 <spi1_activate>

    enable_spi_interrupts();
 800028c:	f7ff ffda 	bl	8000244 <enable_spi_interrupts>

    while (1)
    {
        // Optional: Check if transmission and reception are complete
        if (tx_idx >= tx_size && rx_idx >= rx_size)
 8000290:	4b04      	ldr	r3, [pc, #16]	; (80002a4 <main+0x2c>)
 8000292:	781b      	ldrb	r3, [r3, #0]
 8000294:	b2da      	uxtb	r2, r3
 8000296:	4b04      	ldr	r3, [pc, #16]	; (80002a8 <main+0x30>)
 8000298:	781b      	ldrb	r3, [r3, #0]
 800029a:	429a      	cmp	r2, r3
 800029c:	d3f8      	bcc.n	8000290 <main+0x18>
 800029e:	4b03      	ldr	r3, [pc, #12]	; (80002ac <main+0x34>)
 80002a0:	781b      	ldrb	r3, [r3, #0]
 80002a2:	e7f5      	b.n	8000290 <main+0x18>
 80002a4:	20000030 	.word	0x20000030
 80002a8:	2000000f 	.word	0x2000000f
 80002ac:	20000043 	.word	0x20000043

080002b0 <spi1_callback>:
    }
}

/* SPI1 Master Transmit Callback */
void spi1_callback(void)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
    if (tx_idx < tx_size)
 80002b6:	4b11      	ldr	r3, [pc, #68]	; (80002fc <spi1_callback+0x4c>)
 80002b8:	781b      	ldrb	r3, [r3, #0]
 80002ba:	b2da      	uxtb	r2, r3
 80002bc:	4b10      	ldr	r3, [pc, #64]	; (8000300 <spi1_callback+0x50>)
 80002be:	781b      	ldrb	r3, [r3, #0]
 80002c0:	429a      	cmp	r2, r3
 80002c2:	d20e      	bcs.n	80002e2 <spi1_callback+0x32>
    {
        volatile uint8_t *spidr = ((volatile uint8_t *)&SPI1->DR);
 80002c4:	4b0f      	ldr	r3, [pc, #60]	; (8000304 <spi1_callback+0x54>)
 80002c6:	607b      	str	r3, [r7, #4]
        *spidr = tx_buff[tx_idx++];
 80002c8:	4b0c      	ldr	r3, [pc, #48]	; (80002fc <spi1_callback+0x4c>)
 80002ca:	781b      	ldrb	r3, [r3, #0]
 80002cc:	b2db      	uxtb	r3, r3
 80002ce:	1c5a      	adds	r2, r3, #1
 80002d0:	b2d1      	uxtb	r1, r2
 80002d2:	4a0a      	ldr	r2, [pc, #40]	; (80002fc <spi1_callback+0x4c>)
 80002d4:	7011      	strb	r1, [r2, #0]
 80002d6:	461a      	mov	r2, r3
 80002d8:	4b0b      	ldr	r3, [pc, #44]	; (8000308 <spi1_callback+0x58>)
 80002da:	5c9a      	ldrb	r2, [r3, r2]
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	701a      	strb	r2, [r3, #0]
    else
    {
        // Disable TXE interrupt once done
        SPI1->CR2 &= ~SPI_CR2_TXEIE;
    }
}
 80002e0:	e005      	b.n	80002ee <spi1_callback+0x3e>
        SPI1->CR2 &= ~SPI_CR2_TXEIE;
 80002e2:	4b0a      	ldr	r3, [pc, #40]	; (800030c <spi1_callback+0x5c>)
 80002e4:	685b      	ldr	r3, [r3, #4]
 80002e6:	4a09      	ldr	r2, [pc, #36]	; (800030c <spi1_callback+0x5c>)
 80002e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ec:	6053      	str	r3, [r2, #4]
}
 80002ee:	bf00      	nop
 80002f0:	370c      	adds	r7, #12
 80002f2:	46bd      	mov	sp, r7
 80002f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f8:	4770      	bx	lr
 80002fa:	bf00      	nop
 80002fc:	20000030 	.word	0x20000030
 8000300:	2000000f 	.word	0x2000000f
 8000304:	4001300c 	.word	0x4001300c
 8000308:	20000000 	.word	0x20000000
 800030c:	40013000 	.word	0x40013000

08000310 <SPI1_IRQHandler>:

void SPI1_IRQHandler(void)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
    if (SPI1->SR & SPI_SR_TXE)
 8000314:	4b04      	ldr	r3, [pc, #16]	; (8000328 <SPI1_IRQHandler+0x18>)
 8000316:	689b      	ldr	r3, [r3, #8]
 8000318:	f003 0302 	and.w	r3, r3, #2
 800031c:	2b00      	cmp	r3, #0
 800031e:	d001      	beq.n	8000324 <SPI1_IRQHandler+0x14>
    {
        spi1_callback();
 8000320:	f7ff ffc6 	bl	80002b0 <spi1_callback>
    }
}
 8000324:	bf00      	nop
 8000326:	bd80      	pop	{r7, pc}
 8000328:	40013000 	.word	0x40013000

0800032c <spi3_callback>:

/* SPI3 Slave Receive Callback */
void spi3_callback(void)
{
 800032c:	b480      	push	{r7}
 800032e:	af00      	add	r7, sp, #0
    if (rx_idx < rx_size)
 8000330:	4b0f      	ldr	r3, [pc, #60]	; (8000370 <spi3_callback+0x44>)
 8000332:	781b      	ldrb	r3, [r3, #0]
 8000334:	b2da      	uxtb	r2, r3
 8000336:	4b0f      	ldr	r3, [pc, #60]	; (8000374 <spi3_callback+0x48>)
 8000338:	781b      	ldrb	r3, [r3, #0]
 800033a:	429a      	cmp	r2, r3
 800033c:	d20d      	bcs.n	800035a <spi3_callback+0x2e>
    {
        rx_buff[rx_idx++] = SPI3->DR;
 800033e:	4b0e      	ldr	r3, [pc, #56]	; (8000378 <spi3_callback+0x4c>)
 8000340:	68d9      	ldr	r1, [r3, #12]
 8000342:	4b0b      	ldr	r3, [pc, #44]	; (8000370 <spi3_callback+0x44>)
 8000344:	781b      	ldrb	r3, [r3, #0]
 8000346:	b2db      	uxtb	r3, r3
 8000348:	1c5a      	adds	r2, r3, #1
 800034a:	b2d0      	uxtb	r0, r2
 800034c:	4a08      	ldr	r2, [pc, #32]	; (8000370 <spi3_callback+0x44>)
 800034e:	7010      	strb	r0, [r2, #0]
 8000350:	461a      	mov	r2, r3
 8000352:	b2c9      	uxtb	r1, r1
 8000354:	4b09      	ldr	r3, [pc, #36]	; (800037c <spi3_callback+0x50>)
 8000356:	5499      	strb	r1, [r3, r2]
    else
    {
        // Optional: disable RXNE interrupt when complete
        SPI3->CR2 &= ~SPI_CR2_RXNEIE;
    }
}
 8000358:	e005      	b.n	8000366 <spi3_callback+0x3a>
        SPI3->CR2 &= ~SPI_CR2_RXNEIE;
 800035a:	4b07      	ldr	r3, [pc, #28]	; (8000378 <spi3_callback+0x4c>)
 800035c:	685b      	ldr	r3, [r3, #4]
 800035e:	4a06      	ldr	r2, [pc, #24]	; (8000378 <spi3_callback+0x4c>)
 8000360:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000364:	6053      	str	r3, [r2, #4]
}
 8000366:	bf00      	nop
 8000368:	46bd      	mov	sp, r7
 800036a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036e:	4770      	bx	lr
 8000370:	20000043 	.word	0x20000043
 8000374:	20000010 	.word	0x20000010
 8000378:	40003c00 	.word	0x40003c00
 800037c:	20000034 	.word	0x20000034

08000380 <SPI3_IRQHandler>:

void SPI3_IRQHandler(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
    if (SPI3->SR & SPI_SR_RXNE)
 8000384:	4b04      	ldr	r3, [pc, #16]	; (8000398 <SPI3_IRQHandler+0x18>)
 8000386:	689b      	ldr	r3, [r3, #8]
 8000388:	f003 0301 	and.w	r3, r3, #1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d001      	beq.n	8000394 <SPI3_IRQHandler+0x14>
    {
        spi3_callback();
 8000390:	f7ff ffcc 	bl	800032c <spi3_callback>
    }
}
 8000394:	bf00      	nop
 8000396:	bd80      	pop	{r7, pc}
 8000398:	40003c00 	.word	0x40003c00

0800039c <__NVIC_EnableIRQ>:
{
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	4603      	mov	r3, r0
 80003a4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80003a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	db0b      	blt.n	80003c6 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80003ae:	79fb      	ldrb	r3, [r7, #7]
 80003b0:	f003 021f 	and.w	r2, r3, #31
 80003b4:	4907      	ldr	r1, [pc, #28]	; (80003d4 <__NVIC_EnableIRQ+0x38>)
 80003b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003ba:	095b      	lsrs	r3, r3, #5
 80003bc:	2001      	movs	r0, #1
 80003be:	fa00 f202 	lsl.w	r2, r0, r2
 80003c2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80003c6:	bf00      	nop
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d0:	4770      	bx	lr
 80003d2:	bf00      	nop
 80003d4:	e000e100 	.word	0xe000e100

080003d8 <spi1_config>:
#define SPI1EN		(1U<<12)
#define SPI3EN		(1U<<15)


void spi1_config(void)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	af00      	add	r7, sp, #0
	/* Enable the peripheral clock of GPIOA */
	RCC->AHB1ENR |= GPIOAEN;
 80003dc:	4b74      	ldr	r3, [pc, #464]	; (80005b0 <spi1_config+0x1d8>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e0:	4a73      	ldr	r2, [pc, #460]	; (80005b0 <spi1_config+0x1d8>)
 80003e2:	f043 0301 	orr.w	r3, r3, #1
 80003e6:	6313      	str	r3, [r2, #48]	; 0x30

	/*Configure SPI SCK Pin PA5*/
	GPIOA->MODER &=~(1U<<10);
 80003e8:	4b72      	ldr	r3, [pc, #456]	; (80005b4 <spi1_config+0x1dc>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	4a71      	ldr	r2, [pc, #452]	; (80005b4 <spi1_config+0x1dc>)
 80003ee:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80003f2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<11);
 80003f4:	4b6f      	ldr	r3, [pc, #444]	; (80005b4 <spi1_config+0x1dc>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	4a6e      	ldr	r2, [pc, #440]	; (80005b4 <spi1_config+0x1dc>)
 80003fa:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80003fe:	6013      	str	r3, [r2, #0]

	/*Select alternate function type as AF5*/
	GPIOA->AFR[0] |=(1U<<20);
 8000400:	4b6c      	ldr	r3, [pc, #432]	; (80005b4 <spi1_config+0x1dc>)
 8000402:	6a1b      	ldr	r3, [r3, #32]
 8000404:	4a6b      	ldr	r2, [pc, #428]	; (80005b4 <spi1_config+0x1dc>)
 8000406:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800040a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<21);
 800040c:	4b69      	ldr	r3, [pc, #420]	; (80005b4 <spi1_config+0x1dc>)
 800040e:	6a1b      	ldr	r3, [r3, #32]
 8000410:	4a68      	ldr	r2, [pc, #416]	; (80005b4 <spi1_config+0x1dc>)
 8000412:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8000416:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |=(1U<<22);
 8000418:	4b66      	ldr	r3, [pc, #408]	; (80005b4 <spi1_config+0x1dc>)
 800041a:	6a1b      	ldr	r3, [r3, #32]
 800041c:	4a65      	ldr	r2, [pc, #404]	; (80005b4 <spi1_config+0x1dc>)
 800041e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000422:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<23);
 8000424:	4b63      	ldr	r3, [pc, #396]	; (80005b4 <spi1_config+0x1dc>)
 8000426:	6a1b      	ldr	r3, [r3, #32]
 8000428:	4a62      	ldr	r2, [pc, #392]	; (80005b4 <spi1_config+0x1dc>)
 800042a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800042e:	6213      	str	r3, [r2, #32]

	/*Set pin speed to Very High*/
	GPIOA->OSPEEDR |=(1U<<10);
 8000430:	4b60      	ldr	r3, [pc, #384]	; (80005b4 <spi1_config+0x1dc>)
 8000432:	689b      	ldr	r3, [r3, #8]
 8000434:	4a5f      	ldr	r2, [pc, #380]	; (80005b4 <spi1_config+0x1dc>)
 8000436:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800043a:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |=(1U<<11);
 800043c:	4b5d      	ldr	r3, [pc, #372]	; (80005b4 <spi1_config+0x1dc>)
 800043e:	689b      	ldr	r3, [r3, #8]
 8000440:	4a5c      	ldr	r2, [pc, #368]	; (80005b4 <spi1_config+0x1dc>)
 8000442:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000446:	6093      	str	r3, [r2, #8]

	/*Enable internal pull-down*/
	GPIOA->PUPDR &=~(1U<<10);
 8000448:	4b5a      	ldr	r3, [pc, #360]	; (80005b4 <spi1_config+0x1dc>)
 800044a:	68db      	ldr	r3, [r3, #12]
 800044c:	4a59      	ldr	r2, [pc, #356]	; (80005b4 <spi1_config+0x1dc>)
 800044e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000452:	60d3      	str	r3, [r2, #12]
	GPIOA->PUPDR |=(1U<<11);
 8000454:	4b57      	ldr	r3, [pc, #348]	; (80005b4 <spi1_config+0x1dc>)
 8000456:	68db      	ldr	r3, [r3, #12]
 8000458:	4a56      	ldr	r2, [pc, #344]	; (80005b4 <spi1_config+0x1dc>)
 800045a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800045e:	60d3      	str	r3, [r2, #12]


	/*Configure SPI MOSI Pin PA7*/
	GPIOA->MODER &=~(1U<<14);
 8000460:	4b54      	ldr	r3, [pc, #336]	; (80005b4 <spi1_config+0x1dc>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	4a53      	ldr	r2, [pc, #332]	; (80005b4 <spi1_config+0x1dc>)
 8000466:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800046a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<15);
 800046c:	4b51      	ldr	r3, [pc, #324]	; (80005b4 <spi1_config+0x1dc>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a50      	ldr	r2, [pc, #320]	; (80005b4 <spi1_config+0x1dc>)
 8000472:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000476:	6013      	str	r3, [r2, #0]

	/*Select alternate function type as AF5*/
	GPIOA->AFR[0] |=(1U<<28);
 8000478:	4b4e      	ldr	r3, [pc, #312]	; (80005b4 <spi1_config+0x1dc>)
 800047a:	6a1b      	ldr	r3, [r3, #32]
 800047c:	4a4d      	ldr	r2, [pc, #308]	; (80005b4 <spi1_config+0x1dc>)
 800047e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000482:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<29);
 8000484:	4b4b      	ldr	r3, [pc, #300]	; (80005b4 <spi1_config+0x1dc>)
 8000486:	6a1b      	ldr	r3, [r3, #32]
 8000488:	4a4a      	ldr	r2, [pc, #296]	; (80005b4 <spi1_config+0x1dc>)
 800048a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800048e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |=(1U<<30);
 8000490:	4b48      	ldr	r3, [pc, #288]	; (80005b4 <spi1_config+0x1dc>)
 8000492:	6a1b      	ldr	r3, [r3, #32]
 8000494:	4a47      	ldr	r2, [pc, #284]	; (80005b4 <spi1_config+0x1dc>)
 8000496:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800049a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<31);
 800049c:	4b45      	ldr	r3, [pc, #276]	; (80005b4 <spi1_config+0x1dc>)
 800049e:	6a1b      	ldr	r3, [r3, #32]
 80004a0:	4a44      	ldr	r2, [pc, #272]	; (80005b4 <spi1_config+0x1dc>)
 80004a2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80004a6:	6213      	str	r3, [r2, #32]

	/*Set pin speed to Very High*/
	GPIOA->OSPEEDR |=(1U<<14);
 80004a8:	4b42      	ldr	r3, [pc, #264]	; (80005b4 <spi1_config+0x1dc>)
 80004aa:	689b      	ldr	r3, [r3, #8]
 80004ac:	4a41      	ldr	r2, [pc, #260]	; (80005b4 <spi1_config+0x1dc>)
 80004ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004b2:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |=(1U<<15);
 80004b4:	4b3f      	ldr	r3, [pc, #252]	; (80005b4 <spi1_config+0x1dc>)
 80004b6:	689b      	ldr	r3, [r3, #8]
 80004b8:	4a3e      	ldr	r2, [pc, #248]	; (80005b4 <spi1_config+0x1dc>)
 80004ba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80004be:	6093      	str	r3, [r2, #8]

	/*Enable internal pull-down*/
	GPIOA->PUPDR &=~(1U<<14);
 80004c0:	4b3c      	ldr	r3, [pc, #240]	; (80005b4 <spi1_config+0x1dc>)
 80004c2:	68db      	ldr	r3, [r3, #12]
 80004c4:	4a3b      	ldr	r2, [pc, #236]	; (80005b4 <spi1_config+0x1dc>)
 80004c6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80004ca:	60d3      	str	r3, [r2, #12]
	GPIOA->PUPDR |=(1U<<15);
 80004cc:	4b39      	ldr	r3, [pc, #228]	; (80005b4 <spi1_config+0x1dc>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	4a38      	ldr	r2, [pc, #224]	; (80005b4 <spi1_config+0x1dc>)
 80004d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80004d6:	60d3      	str	r3, [r2, #12]

	/*SPI interrupt in the NVIC*/
    NVIC_EnableIRQ(SPI1_IRQn);
 80004d8:	2023      	movs	r0, #35	; 0x23
 80004da:	f7ff ff5f 	bl	800039c <__NVIC_EnableIRQ>



    /* Configure SPI1 communication */
    RCC->APB2ENR |=SPI1EN;
 80004de:	4b34      	ldr	r3, [pc, #208]	; (80005b0 <spi1_config+0x1d8>)
 80004e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004e2:	4a33      	ldr	r2, [pc, #204]	; (80005b0 <spi1_config+0x1d8>)
 80004e4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80004e8:	6453      	str	r3, [r2, #68]	; 0x44

	/*Set clock to fPCLK/256*/
    SPI1->CR1 |=(1U<<3);
 80004ea:	4b33      	ldr	r3, [pc, #204]	; (80005b8 <spi1_config+0x1e0>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	4a32      	ldr	r2, [pc, #200]	; (80005b8 <spi1_config+0x1e0>)
 80004f0:	f043 0308 	orr.w	r3, r3, #8
 80004f4:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |=(1U<<4);
 80004f6:	4b30      	ldr	r3, [pc, #192]	; (80005b8 <spi1_config+0x1e0>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a2f      	ldr	r2, [pc, #188]	; (80005b8 <spi1_config+0x1e0>)
 80004fc:	f043 0310 	orr.w	r3, r3, #16
 8000500:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |=(1U<<5);
 8000502:	4b2d      	ldr	r3, [pc, #180]	; (80005b8 <spi1_config+0x1e0>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a2c      	ldr	r2, [pc, #176]	; (80005b8 <spi1_config+0x1e0>)
 8000508:	f043 0320 	orr.w	r3, r3, #32
 800050c:	6013      	str	r3, [r2, #0]

	 /*Select TX only*/
	SPI1->CR1 |=(1U<<14);
 800050e:	4b2a      	ldr	r3, [pc, #168]	; (80005b8 <spi1_config+0x1e0>)
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	4a29      	ldr	r2, [pc, #164]	; (80005b8 <spi1_config+0x1e0>)
 8000514:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000518:	6013      	str	r3, [r2, #0]

	/*Select 1-line bidirectional data mode selected*/
	SPI1->CR1 |=(1U<<15);
 800051a:	4b27      	ldr	r3, [pc, #156]	; (80005b8 <spi1_config+0x1e0>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	4a26      	ldr	r2, [pc, #152]	; (80005b8 <spi1_config+0x1e0>)
 8000520:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000524:	6013      	str	r3, [r2, #0]

	/*Set CPOL to 1 and CPHA to 1*/
	SPI1->CR1 |=(1U<<0);
 8000526:	4b24      	ldr	r3, [pc, #144]	; (80005b8 <spi1_config+0x1e0>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a23      	ldr	r2, [pc, #140]	; (80005b8 <spi1_config+0x1e0>)
 800052c:	f043 0301 	orr.w	r3, r3, #1
 8000530:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |=(1U<<1);
 8000532:	4b21      	ldr	r3, [pc, #132]	; (80005b8 <spi1_config+0x1e0>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a20      	ldr	r2, [pc, #128]	; (80005b8 <spi1_config+0x1e0>)
 8000538:	f043 0302 	orr.w	r3, r3, #2
 800053c:	6013      	str	r3, [r2, #0]

	/*Set data width to 8 bit*/
	SPI1->CR2 |=(1U<<8);
 800053e:	4b1e      	ldr	r3, [pc, #120]	; (80005b8 <spi1_config+0x1e0>)
 8000540:	685b      	ldr	r3, [r3, #4]
 8000542:	4a1d      	ldr	r2, [pc, #116]	; (80005b8 <spi1_config+0x1e0>)
 8000544:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000548:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |=(1U<<9);
 800054a:	4b1b      	ldr	r3, [pc, #108]	; (80005b8 <spi1_config+0x1e0>)
 800054c:	685b      	ldr	r3, [r3, #4]
 800054e:	4a1a      	ldr	r2, [pc, #104]	; (80005b8 <spi1_config+0x1e0>)
 8000550:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000554:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |=(1U<<10);
 8000556:	4b18      	ldr	r3, [pc, #96]	; (80005b8 <spi1_config+0x1e0>)
 8000558:	685b      	ldr	r3, [r3, #4]
 800055a:	4a17      	ldr	r2, [pc, #92]	; (80005b8 <spi1_config+0x1e0>)
 800055c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000560:	6053      	str	r3, [r2, #4]
	SPI1->CR2 &=~(1U<<11);
 8000562:	4b15      	ldr	r3, [pc, #84]	; (80005b8 <spi1_config+0x1e0>)
 8000564:	685b      	ldr	r3, [r3, #4]
 8000566:	4a14      	ldr	r2, [pc, #80]	; (80005b8 <spi1_config+0x1e0>)
 8000568:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800056c:	6053      	str	r3, [r2, #4]

	/*Enable software slave management*/
	SPI1->CR1 |= (1U<<9);
 800056e:	4b12      	ldr	r3, [pc, #72]	; (80005b8 <spi1_config+0x1e0>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	4a11      	ldr	r2, [pc, #68]	; (80005b8 <spi1_config+0x1e0>)
 8000574:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000578:	6013      	str	r3, [r2, #0]

	/*Enable Slave Select Output*/
	SPI1->CR2 |= (1U<<2);
 800057a:	4b0f      	ldr	r3, [pc, #60]	; (80005b8 <spi1_config+0x1e0>)
 800057c:	685b      	ldr	r3, [r3, #4]
 800057e:	4a0e      	ldr	r2, [pc, #56]	; (80005b8 <spi1_config+0x1e0>)
 8000580:	f043 0304 	orr.w	r3, r3, #4
 8000584:	6053      	str	r3, [r2, #4]

	/*Set fifo reception threshold*/
	SPI1->CR2 |=(1U<<12);
 8000586:	4b0c      	ldr	r3, [pc, #48]	; (80005b8 <spi1_config+0x1e0>)
 8000588:	685b      	ldr	r3, [r3, #4]
 800058a:	4a0b      	ldr	r2, [pc, #44]	; (80005b8 <spi1_config+0x1e0>)
 800058c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000590:	6053      	str	r3, [r2, #4]

    /* Enable TXE  Interrupt */
	SPI1->CR2 |=(1U<<7);
 8000592:	4b09      	ldr	r3, [pc, #36]	; (80005b8 <spi1_config+0x1e0>)
 8000594:	685b      	ldr	r3, [r3, #4]
 8000596:	4a08      	ldr	r2, [pc, #32]	; (80005b8 <spi1_config+0x1e0>)
 8000598:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800059c:	6053      	str	r3, [r2, #4]

	/*Set mode to MASTER*/
	SPI1->CR1 |= (1U<<2);
 800059e:	4b06      	ldr	r3, [pc, #24]	; (80005b8 <spi1_config+0x1e0>)
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	4a05      	ldr	r2, [pc, #20]	; (80005b8 <spi1_config+0x1e0>)
 80005a4:	f043 0304 	orr.w	r3, r3, #4
 80005a8:	6013      	str	r3, [r2, #0]

}
 80005aa:	bf00      	nop
 80005ac:	bd80      	pop	{r7, pc}
 80005ae:	bf00      	nop
 80005b0:	40023800 	.word	0x40023800
 80005b4:	40020000 	.word	0x40020000
 80005b8:	40013000 	.word	0x40013000

080005bc <spi3_config>:


void spi3_config(void)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	af00      	add	r7, sp, #0
	  /* Enable the peripheral clock of GPIOB */
	  RCC->AHB1ENR |= GPIOBEN;
 80005c0:	4b71      	ldr	r3, [pc, #452]	; (8000788 <spi3_config+0x1cc>)
 80005c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c4:	4a70      	ldr	r2, [pc, #448]	; (8000788 <spi3_config+0x1cc>)
 80005c6:	f043 0302 	orr.w	r3, r3, #2
 80005ca:	6313      	str	r3, [r2, #48]	; 0x30

	  /*Configure SPI3 SCK Pin PB3*/
	  GPIOB->MODER &=~(1U<<6);
 80005cc:	4b6f      	ldr	r3, [pc, #444]	; (800078c <spi3_config+0x1d0>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a6e      	ldr	r2, [pc, #440]	; (800078c <spi3_config+0x1d0>)
 80005d2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80005d6:	6013      	str	r3, [r2, #0]
	  GPIOB->MODER |=(1U<<7);
 80005d8:	4b6c      	ldr	r3, [pc, #432]	; (800078c <spi3_config+0x1d0>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a6b      	ldr	r2, [pc, #428]	; (800078c <spi3_config+0x1d0>)
 80005de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80005e2:	6013      	str	r3, [r2, #0]

	  /*Select alternate type AF6*/
	  GPIOB->AFR[0] &=~(1U<<12);
 80005e4:	4b69      	ldr	r3, [pc, #420]	; (800078c <spi3_config+0x1d0>)
 80005e6:	6a1b      	ldr	r3, [r3, #32]
 80005e8:	4a68      	ldr	r2, [pc, #416]	; (800078c <spi3_config+0x1d0>)
 80005ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80005ee:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] |=(1U<<13);
 80005f0:	4b66      	ldr	r3, [pc, #408]	; (800078c <spi3_config+0x1d0>)
 80005f2:	6a1b      	ldr	r3, [r3, #32]
 80005f4:	4a65      	ldr	r2, [pc, #404]	; (800078c <spi3_config+0x1d0>)
 80005f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005fa:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] |=(1U<<14);
 80005fc:	4b63      	ldr	r3, [pc, #396]	; (800078c <spi3_config+0x1d0>)
 80005fe:	6a1b      	ldr	r3, [r3, #32]
 8000600:	4a62      	ldr	r2, [pc, #392]	; (800078c <spi3_config+0x1d0>)
 8000602:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000606:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] &=~(1U<<15);
 8000608:	4b60      	ldr	r3, [pc, #384]	; (800078c <spi3_config+0x1d0>)
 800060a:	6a1b      	ldr	r3, [r3, #32]
 800060c:	4a5f      	ldr	r2, [pc, #380]	; (800078c <spi3_config+0x1d0>)
 800060e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000612:	6213      	str	r3, [r2, #32]

	  /*Set pin speed to Very High*/
	  GPIOB->OSPEEDR |=(1U<<6);
 8000614:	4b5d      	ldr	r3, [pc, #372]	; (800078c <spi3_config+0x1d0>)
 8000616:	689b      	ldr	r3, [r3, #8]
 8000618:	4a5c      	ldr	r2, [pc, #368]	; (800078c <spi3_config+0x1d0>)
 800061a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800061e:	6093      	str	r3, [r2, #8]
	  GPIOB->OSPEEDR |=(1U<<7);
 8000620:	4b5a      	ldr	r3, [pc, #360]	; (800078c <spi3_config+0x1d0>)
 8000622:	689b      	ldr	r3, [r3, #8]
 8000624:	4a59      	ldr	r2, [pc, #356]	; (800078c <spi3_config+0x1d0>)
 8000626:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800062a:	6093      	str	r3, [r2, #8]

	  /*Enable internal pull-down*/
	  GPIOB->PUPDR &=~(1U<<6);
 800062c:	4b57      	ldr	r3, [pc, #348]	; (800078c <spi3_config+0x1d0>)
 800062e:	68db      	ldr	r3, [r3, #12]
 8000630:	4a56      	ldr	r2, [pc, #344]	; (800078c <spi3_config+0x1d0>)
 8000632:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000636:	60d3      	str	r3, [r2, #12]
	  GPIOB->PUPDR |=(1U<<7);
 8000638:	4b54      	ldr	r3, [pc, #336]	; (800078c <spi3_config+0x1d0>)
 800063a:	68db      	ldr	r3, [r3, #12]
 800063c:	4a53      	ldr	r2, [pc, #332]	; (800078c <spi3_config+0x1d0>)
 800063e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000642:	60d3      	str	r3, [r2, #12]


	  /*Configure SPI3 MISO Pin PB4*/
	  GPIOB->MODER &=~(1U<<8);
 8000644:	4b51      	ldr	r3, [pc, #324]	; (800078c <spi3_config+0x1d0>)
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	4a50      	ldr	r2, [pc, #320]	; (800078c <spi3_config+0x1d0>)
 800064a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800064e:	6013      	str	r3, [r2, #0]
	  GPIOB->MODER |=(1U<<9);
 8000650:	4b4e      	ldr	r3, [pc, #312]	; (800078c <spi3_config+0x1d0>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	4a4d      	ldr	r2, [pc, #308]	; (800078c <spi3_config+0x1d0>)
 8000656:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800065a:	6013      	str	r3, [r2, #0]

	 /*Select alternate type AF6*/
	  GPIOB->AFR[0] &=~(1U<<16);
 800065c:	4b4b      	ldr	r3, [pc, #300]	; (800078c <spi3_config+0x1d0>)
 800065e:	6a1b      	ldr	r3, [r3, #32]
 8000660:	4a4a      	ldr	r2, [pc, #296]	; (800078c <spi3_config+0x1d0>)
 8000662:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000666:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] |=(1U<<17);
 8000668:	4b48      	ldr	r3, [pc, #288]	; (800078c <spi3_config+0x1d0>)
 800066a:	6a1b      	ldr	r3, [r3, #32]
 800066c:	4a47      	ldr	r2, [pc, #284]	; (800078c <spi3_config+0x1d0>)
 800066e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000672:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] |=(1U<<18);
 8000674:	4b45      	ldr	r3, [pc, #276]	; (800078c <spi3_config+0x1d0>)
 8000676:	6a1b      	ldr	r3, [r3, #32]
 8000678:	4a44      	ldr	r2, [pc, #272]	; (800078c <spi3_config+0x1d0>)
 800067a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800067e:	6213      	str	r3, [r2, #32]
	  GPIOB->AFR[0] &=~(1U<<19);
 8000680:	4b42      	ldr	r3, [pc, #264]	; (800078c <spi3_config+0x1d0>)
 8000682:	6a1b      	ldr	r3, [r3, #32]
 8000684:	4a41      	ldr	r2, [pc, #260]	; (800078c <spi3_config+0x1d0>)
 8000686:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800068a:	6213      	str	r3, [r2, #32]

	  /*Set pin speed to Very High*/
	  GPIOB->OSPEEDR |=(1U<<8);
 800068c:	4b3f      	ldr	r3, [pc, #252]	; (800078c <spi3_config+0x1d0>)
 800068e:	689b      	ldr	r3, [r3, #8]
 8000690:	4a3e      	ldr	r2, [pc, #248]	; (800078c <spi3_config+0x1d0>)
 8000692:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000696:	6093      	str	r3, [r2, #8]
	  GPIOB->OSPEEDR |=(1U<<9);
 8000698:	4b3c      	ldr	r3, [pc, #240]	; (800078c <spi3_config+0x1d0>)
 800069a:	689b      	ldr	r3, [r3, #8]
 800069c:	4a3b      	ldr	r2, [pc, #236]	; (800078c <spi3_config+0x1d0>)
 800069e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80006a2:	6093      	str	r3, [r2, #8]

	  /*Enable internal pull-down*/
	  GPIOB->PUPDR &=~(1U<<8);
 80006a4:	4b39      	ldr	r3, [pc, #228]	; (800078c <spi3_config+0x1d0>)
 80006a6:	68db      	ldr	r3, [r3, #12]
 80006a8:	4a38      	ldr	r2, [pc, #224]	; (800078c <spi3_config+0x1d0>)
 80006aa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80006ae:	60d3      	str	r3, [r2, #12]
	  GPIOB->PUPDR |=(1U<<9);
 80006b0:	4b36      	ldr	r3, [pc, #216]	; (800078c <spi3_config+0x1d0>)
 80006b2:	68db      	ldr	r3, [r3, #12]
 80006b4:	4a35      	ldr	r2, [pc, #212]	; (800078c <spi3_config+0x1d0>)
 80006b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80006ba:	60d3      	str	r3, [r2, #12]

	  /*Enable SPI3 interrupt in NVIC*/
	  NVIC_EnableIRQ(SPI3_IRQn);
 80006bc:	2033      	movs	r0, #51	; 0x33
 80006be:	f7ff fe6d 	bl	800039c <__NVIC_EnableIRQ>


	  /* Configure SPI3 communication */

	  /*Enable clock access to SPI3*/
	  RCC->APB1ENR |=SPI3EN;
 80006c2:	4b31      	ldr	r3, [pc, #196]	; (8000788 <spi3_config+0x1cc>)
 80006c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006c6:	4a30      	ldr	r2, [pc, #192]	; (8000788 <spi3_config+0x1cc>)
 80006c8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80006cc:	6413      	str	r3, [r2, #64]	; 0x40


	  /*Set clock to fPCLK/256*/
	   SPI3->CR1 |=(1U<<3);
 80006ce:	4b30      	ldr	r3, [pc, #192]	; (8000790 <spi3_config+0x1d4>)
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	4a2f      	ldr	r2, [pc, #188]	; (8000790 <spi3_config+0x1d4>)
 80006d4:	f043 0308 	orr.w	r3, r3, #8
 80006d8:	6013      	str	r3, [r2, #0]
	   SPI3->CR1 |=(1U<<4);
 80006da:	4b2d      	ldr	r3, [pc, #180]	; (8000790 <spi3_config+0x1d4>)
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	4a2c      	ldr	r2, [pc, #176]	; (8000790 <spi3_config+0x1d4>)
 80006e0:	f043 0310 	orr.w	r3, r3, #16
 80006e4:	6013      	str	r3, [r2, #0]
	  SPI3->CR1 |=(1U<<5);
 80006e6:	4b2a      	ldr	r3, [pc, #168]	; (8000790 <spi3_config+0x1d4>)
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	4a29      	ldr	r2, [pc, #164]	; (8000790 <spi3_config+0x1d4>)
 80006ec:	f043 0320 	orr.w	r3, r3, #32
 80006f0:	6013      	str	r3, [r2, #0]

	 /*Set CPOL to 1 and CPHA to 1*/
	 SPI3->CR1 |=(1U<<0);
 80006f2:	4b27      	ldr	r3, [pc, #156]	; (8000790 <spi3_config+0x1d4>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a26      	ldr	r2, [pc, #152]	; (8000790 <spi3_config+0x1d4>)
 80006f8:	f043 0301 	orr.w	r3, r3, #1
 80006fc:	6013      	str	r3, [r2, #0]
	 SPI3->CR1 |=(1U<<1);
 80006fe:	4b24      	ldr	r3, [pc, #144]	; (8000790 <spi3_config+0x1d4>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4a23      	ldr	r2, [pc, #140]	; (8000790 <spi3_config+0x1d4>)
 8000704:	f043 0302 	orr.w	r3, r3, #2
 8000708:	6013      	str	r3, [r2, #0]

	/*Set data width to 8 bit*/
	SPI3->CR2 |=(1U<<8);
 800070a:	4b21      	ldr	r3, [pc, #132]	; (8000790 <spi3_config+0x1d4>)
 800070c:	685b      	ldr	r3, [r3, #4]
 800070e:	4a20      	ldr	r2, [pc, #128]	; (8000790 <spi3_config+0x1d4>)
 8000710:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000714:	6053      	str	r3, [r2, #4]
	SPI3->CR2 |=(1U<<9);
 8000716:	4b1e      	ldr	r3, [pc, #120]	; (8000790 <spi3_config+0x1d4>)
 8000718:	685b      	ldr	r3, [r3, #4]
 800071a:	4a1d      	ldr	r2, [pc, #116]	; (8000790 <spi3_config+0x1d4>)
 800071c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000720:	6053      	str	r3, [r2, #4]
	SPI3->CR2 |=(1U<<10);
 8000722:	4b1b      	ldr	r3, [pc, #108]	; (8000790 <spi3_config+0x1d4>)
 8000724:	685b      	ldr	r3, [r3, #4]
 8000726:	4a1a      	ldr	r2, [pc, #104]	; (8000790 <spi3_config+0x1d4>)
 8000728:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800072c:	6053      	str	r3, [r2, #4]
	SPI3->CR2 &=~(1U<<11);
 800072e:	4b18      	ldr	r3, [pc, #96]	; (8000790 <spi3_config+0x1d4>)
 8000730:	685b      	ldr	r3, [r3, #4]
 8000732:	4a17      	ldr	r2, [pc, #92]	; (8000790 <spi3_config+0x1d4>)
 8000734:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000738:	6053      	str	r3, [r2, #4]

	/*Enable software slave management*/
	SPI3->CR1 |= (1U<<9);
 800073a:	4b15      	ldr	r3, [pc, #84]	; (8000790 <spi3_config+0x1d4>)
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	4a14      	ldr	r2, [pc, #80]	; (8000790 <spi3_config+0x1d4>)
 8000740:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000744:	6013      	str	r3, [r2, #0]

	/*Enable Slave Select Output*/
	SPI3->CR2 |= (1U<<2);
 8000746:	4b12      	ldr	r3, [pc, #72]	; (8000790 <spi3_config+0x1d4>)
 8000748:	685b      	ldr	r3, [r3, #4]
 800074a:	4a11      	ldr	r2, [pc, #68]	; (8000790 <spi3_config+0x1d4>)
 800074c:	f043 0304 	orr.w	r3, r3, #4
 8000750:	6053      	str	r3, [r2, #4]

	/*Select 1-line bidirectional data mode selected*/
	SPI3->CR1 |=(1U<<15);
 8000752:	4b0f      	ldr	r3, [pc, #60]	; (8000790 <spi3_config+0x1d4>)
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	4a0e      	ldr	r2, [pc, #56]	; (8000790 <spi3_config+0x1d4>)
 8000758:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800075c:	6013      	str	r3, [r2, #0]

	 /*Select RX only*/
	SPI3->CR1 &=~(1U<<14);
 800075e:	4b0c      	ldr	r3, [pc, #48]	; (8000790 <spi3_config+0x1d4>)
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	4a0b      	ldr	r2, [pc, #44]	; (8000790 <spi3_config+0x1d4>)
 8000764:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000768:	6013      	str	r3, [r2, #0]

	/*Set fifo reception threshold*/
	SPI3->CR2 |=(1U<<12);
 800076a:	4b09      	ldr	r3, [pc, #36]	; (8000790 <spi3_config+0x1d4>)
 800076c:	685b      	ldr	r3, [r3, #4]
 800076e:	4a08      	ldr	r2, [pc, #32]	; (8000790 <spi3_config+0x1d4>)
 8000770:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000774:	6053      	str	r3, [r2, #4]

	/* Enable RXNE  Interrupt */
	SPI3->CR2 |=(1U<<6);
 8000776:	4b06      	ldr	r3, [pc, #24]	; (8000790 <spi3_config+0x1d4>)
 8000778:	685b      	ldr	r3, [r3, #4]
 800077a:	4a05      	ldr	r2, [pc, #20]	; (8000790 <spi3_config+0x1d4>)
 800077c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000780:	6053      	str	r3, [r2, #4]

}
 8000782:	bf00      	nop
 8000784:	bd80      	pop	{r7, pc}
 8000786:	bf00      	nop
 8000788:	40023800 	.word	0x40023800
 800078c:	40020400 	.word	0x40020400
 8000790:	40003c00 	.word	0x40003c00

08000794 <spi1_activate>:

void spi1_activate(void)
{
 8000794:	b480      	push	{r7}
 8000796:	af00      	add	r7, sp, #0
	  /* Enable SPI1 */
	  SPI1->CR1 |=(1U<<6);
 8000798:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <spi1_activate+0x1c>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	4a04      	ldr	r2, [pc, #16]	; (80007b0 <spi1_activate+0x1c>)
 800079e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007a2:	6013      	str	r3, [r2, #0]
}
 80007a4:	bf00      	nop
 80007a6:	46bd      	mov	sp, r7
 80007a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ac:	4770      	bx	lr
 80007ae:	bf00      	nop
 80007b0:	40013000 	.word	0x40013000

080007b4 <spi3_activate>:

void spi3_activate(void)
{
 80007b4:	b480      	push	{r7}
 80007b6:	af00      	add	r7, sp, #0
  /* Enable SPI3 */
  SPI3->CR1 |=(1U<<6);
 80007b8:	4b05      	ldr	r3, [pc, #20]	; (80007d0 <spi3_activate+0x1c>)
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	4a04      	ldr	r2, [pc, #16]	; (80007d0 <spi3_activate+0x1c>)
 80007be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007c2:	6013      	str	r3, [r2, #0]

}
 80007c4:	bf00      	nop
 80007c6:	46bd      	mov	sp, r7
 80007c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	40003c00 	.word	0x40003c00

080007d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007d4:	480d      	ldr	r0, [pc, #52]	; (800080c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007dc:	480c      	ldr	r0, [pc, #48]	; (8000810 <LoopForever+0x6>)
  ldr r1, =_edata
 80007de:	490d      	ldr	r1, [pc, #52]	; (8000814 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007e0:	4a0d      	ldr	r2, [pc, #52]	; (8000818 <LoopForever+0xe>)
  movs r3, #0
 80007e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007e4:	e002      	b.n	80007ec <LoopCopyDataInit>

080007e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007ea:	3304      	adds	r3, #4

080007ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007f0:	d3f9      	bcc.n	80007e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007f2:	4a0a      	ldr	r2, [pc, #40]	; (800081c <LoopForever+0x12>)
  ldr r4, =_ebss
 80007f4:	4c0a      	ldr	r4, [pc, #40]	; (8000820 <LoopForever+0x16>)
  movs r3, #0
 80007f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007f8:	e001      	b.n	80007fe <LoopFillZerobss>

080007fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007fc:	3204      	adds	r2, #4

080007fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000800:	d3fb      	bcc.n	80007fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000802:	f000 f811 	bl	8000828 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000806:	f7ff fd37 	bl	8000278 <main>

0800080a <LoopForever>:

LoopForever:
    b LoopForever
 800080a:	e7fe      	b.n	800080a <LoopForever>
  ldr   r0, =_estack
 800080c:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8000810:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000814:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 8000818:	08000890 	.word	0x08000890
  ldr r2, =_sbss
 800081c:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 8000820:	20000044 	.word	0x20000044

08000824 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000824:	e7fe      	b.n	8000824 <ADC_IRQHandler>
	...

08000828 <__libc_init_array>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	4d0d      	ldr	r5, [pc, #52]	; (8000860 <__libc_init_array+0x38>)
 800082c:	4c0d      	ldr	r4, [pc, #52]	; (8000864 <__libc_init_array+0x3c>)
 800082e:	1b64      	subs	r4, r4, r5
 8000830:	10a4      	asrs	r4, r4, #2
 8000832:	2600      	movs	r6, #0
 8000834:	42a6      	cmp	r6, r4
 8000836:	d109      	bne.n	800084c <__libc_init_array+0x24>
 8000838:	4d0b      	ldr	r5, [pc, #44]	; (8000868 <__libc_init_array+0x40>)
 800083a:	4c0c      	ldr	r4, [pc, #48]	; (800086c <__libc_init_array+0x44>)
 800083c:	f000 f818 	bl	8000870 <_init>
 8000840:	1b64      	subs	r4, r4, r5
 8000842:	10a4      	asrs	r4, r4, #2
 8000844:	2600      	movs	r6, #0
 8000846:	42a6      	cmp	r6, r4
 8000848:	d105      	bne.n	8000856 <__libc_init_array+0x2e>
 800084a:	bd70      	pop	{r4, r5, r6, pc}
 800084c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000850:	4798      	blx	r3
 8000852:	3601      	adds	r6, #1
 8000854:	e7ee      	b.n	8000834 <__libc_init_array+0xc>
 8000856:	f855 3b04 	ldr.w	r3, [r5], #4
 800085a:	4798      	blx	r3
 800085c:	3601      	adds	r6, #1
 800085e:	e7f2      	b.n	8000846 <__libc_init_array+0x1e>
 8000860:	08000888 	.word	0x08000888
 8000864:	08000888 	.word	0x08000888
 8000868:	08000888 	.word	0x08000888
 800086c:	0800088c 	.word	0x0800088c

08000870 <_init>:
 8000870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000872:	bf00      	nop
 8000874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000876:	bc08      	pop	{r3}
 8000878:	469e      	mov	lr, r3
 800087a:	4770      	bx	lr

0800087c <_fini>:
 800087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087e:	bf00      	nop
 8000880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000882:	bc08      	pop	{r3}
 8000884:	469e      	mov	lr, r3
 8000886:	4770      	bx	lr
